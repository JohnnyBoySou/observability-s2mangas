# Sentry Core Configuration
# Generate a secret key with at least 32 characters
# Use: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
SENTRY_SECRET_KEY=your_32_character_minimum_secret_key_here

# Email Configuration for Sentry Notifications
SENTRY_EMAIL_HOST=smtp.yourdomain.com
SENTRY_EMAIL_PORT=587
SENTRY_EMAIL_USER=your_email_user
SENTRY_EMAIL_PASSWORD=your_email_password
SENTRY_SERVER_EMAIL=noreply@yourdomain.com

# Optional Sentry Configuration
SENTRY_USE_SSL=0
SENTRY_SINGLE_ORGANIZATION=1

# Database Configuration (Optional - using defaults from docker-compose)
# SENTRY_POSTGRES_HOST=postgres
# SENTRY_POSTGRES_PORT=5432
# SENTRY_DB_NAME=sentry
# SENTRY_DB_USER=sentry
# SENTRY_DB_PASSWORD=sentry

# Redis Configuration (Optional - using defaults from docker-compose)
# SENTRY_REDIS_HOST=redis
# SENTRY_REDIS_PORT=6379
# SENTRY_REDIS_DB=0

# Additional Sentry Features (Uncomment to enable)
# SENTRY_BEACON=1
# SENTRY_FEATURES_default_projects=1
# SENTRY_RATELIMITER=sentry.ratelimits.redis.RedisRateLimiter
# SENTRY_RATELIMITER_OPTIONS={"hosts": {"default": {"host": "redis", "port": 6379, "db": 1}}}

# Security Settings for Reverse Proxy (Uncomment if using nginx/apache)
# SENTRY_SECURE_PROXY_SSL_HEADER=HTTP_X_FORWARDED_PROTO,https
# SENTRY_USE_X_FORWARDED_HOST=true